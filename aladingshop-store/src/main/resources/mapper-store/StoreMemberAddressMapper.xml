<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aladingshop.store.dao.StoreMemberAddressDao" >

  <resultMap id="StoreMemberAddressResultMap" type="StoreMemberAddress" >
    <id column="id" property="id" />
    <result column="store_code" property="storeCode" />
    <result column="member_id" property="memberId" />
    <result column="contactor" property="contactor" />
    <result column="mobile" property="mobile" />
    <result column="address" property="address" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
  </resultMap>
  
  
  <insert id="add" parameterType="StoreMemberAddress">
  
  	insert into 
  		t_store_member_address(id,store_code,member_id,contactor,mobile,address,create_time,update_time)
  	values
  		(#{id},#{storeCode},#{memberId},#{contactor},#{mobile},#{address},#{createTime},#{updateTime})
  </insert>
  
  <update id="update" parameterType="StoreMemberAddress">
	  	update t_store_member_address 
	  	<set>
	  		contactor=#{contactor},
	  		mobile=#{mobile},
	  		address=#{address},
	  		update_time = now()
	  	</set>
	  	
	  	<where>
	  		id=#{id}
	  	</where>
  </update>
  
  <delete id="deleteById" parameterType="java.lang.Long">
  	delete from t_store_member_address where id = #{id}
  </delete>
  
  
  <select id="findById" parameterType="java.lang.Long"  resultMap="StoreMemberAddressResultMap">
  	select 
         id,store_code,member_id,contactor,mobile,address,create_time,update_time
    from 
    	t_store_member_address
    where
    	id=#{id}
  
  </select>
  
  
  <select id="findByQueryCondition" parameterType="StoreMemberAddressQueryCondition" resultType="list" resultMap="StoreMemberAddressResultMap">
    select 
          id,store_code,member_id,contactor,mobile,address,create_time,update_time
    from 
    	t_store_member_address
    <where>
    	
    	<if test="storeCode!=null and storeCode!=''">
    		AND store_code = #{storeCode} 
    	</if>
    	<if test="memberId!=null and memberId!=''">
    		AND member_id = #{memberId}
    	</if>
    	order by update_time DESC,create_time DESC
		<if test="start !=null and start>-1">
			LIMIT #{start}
		</if>
		<if test="start !=null and start>-1 and limit !=null and limit !=''">
			,#{limit}
		</if>
    </where>
  </select>  
  
  
  
</mapper>